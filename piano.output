Terminals which are not used

   VARIABLE
   INTEGER


State 1 conflicts: 4 shift/reduce, 1 reduce/reduce
State 8 conflicts: 4 shift/reduce, 1 reduce/reduce
State 9 conflicts: 4 shift/reduce


Grammar

    0 $accept: song $end

    1 song: song stmt '\n'
    2     | /* empty */

    3 stmt: expr stmt
    4     | /* empty */

    5 expr: note expr
    6     | note '-'
    7     | note '-' '-'
    8     | note '-' '-' '-'
    9     | '[' expr ']'
   10     | /* empty */

   11 note: NOTE
   12     | '_' NOTE
   13     | '^' NOTE


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1
'-' (45) 6 7 8
'[' (91) 9
']' (93) 9
'^' (94) 13
'_' (95) 12
error (256)
NOTE (258) 11 12 13
VARIABLE (259)
INTEGER (260)


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
song (13)
    on left: 1 2, on right: 0 1
stmt (14)
    on left: 3 4, on right: 1 3
expr (15)
    on left: 5 6 7 8 9 10, on right: 3 5 9
note (16)
    on left: 11 12 13, on right: 5 6 7 8


state 0

    0 $accept: . song $end

    $default  reduce using rule 2 (song)

    song  go to state 1


state 1

    0 $accept: song . $end
    1 song: song . stmt '\n'

    $end  shift, and go to state 2
    NOTE  shift, and go to state 3
    '['   shift, and go to state 4
    '_'   shift, and go to state 5
    '^'   shift, and go to state 6

    NOTE      [reduce using rule 10 (expr)]
    '\n'      reduce using rule 4 (stmt)
    '\n'      [reduce using rule 10 (expr)]
    '['       [reduce using rule 10 (expr)]
    '_'       [reduce using rule 10 (expr)]
    '^'       [reduce using rule 10 (expr)]
    $default  reduce using rule 4 (stmt)

    stmt  go to state 7
    expr  go to state 8
    note  go to state 9


state 2

    0 $accept: song $end .

    $default  accept


state 3

   11 note: NOTE .

    $default  reduce using rule 11 (note)


state 4

    9 expr: '[' . expr ']'

    NOTE  shift, and go to state 3
    '['   shift, and go to state 4
    '_'   shift, and go to state 5
    '^'   shift, and go to state 6

    $default  reduce using rule 10 (expr)

    expr  go to state 10
    note  go to state 9


state 5

   12 note: '_' . NOTE

    NOTE  shift, and go to state 11


state 6

   13 note: '^' . NOTE

    NOTE  shift, and go to state 12


state 7

    1 song: song stmt . '\n'

    '\n'  shift, and go to state 13


state 8

    3 stmt: expr . stmt

    NOTE  shift, and go to state 3
    '['   shift, and go to state 4
    '_'   shift, and go to state 5
    '^'   shift, and go to state 6

    NOTE      [reduce using rule 10 (expr)]
    '\n'      reduce using rule 4 (stmt)
    '\n'      [reduce using rule 10 (expr)]
    '['       [reduce using rule 10 (expr)]
    '_'       [reduce using rule 10 (expr)]
    '^'       [reduce using rule 10 (expr)]
    $default  reduce using rule 4 (stmt)

    stmt  go to state 14
    expr  go to state 8
    note  go to state 9


state 9

    5 expr: note . expr
    6     | note . '-'
    7     | note . '-' '-'
    8     | note . '-' '-' '-'

    NOTE  shift, and go to state 3
    '-'   shift, and go to state 15
    '['   shift, and go to state 4
    '_'   shift, and go to state 5
    '^'   shift, and go to state 6

    NOTE      [reduce using rule 10 (expr)]
    '['       [reduce using rule 10 (expr)]
    '_'       [reduce using rule 10 (expr)]
    '^'       [reduce using rule 10 (expr)]
    $default  reduce using rule 10 (expr)

    expr  go to state 16
    note  go to state 9


state 10

    9 expr: '[' expr . ']'

    ']'  shift, and go to state 17


state 11

   12 note: '_' NOTE .

    $default  reduce using rule 12 (note)


state 12

   13 note: '^' NOTE .

    $default  reduce using rule 13 (note)


state 13

    1 song: song stmt '\n' .

    $default  reduce using rule 1 (song)


state 14

    3 stmt: expr stmt .

    $default  reduce using rule 3 (stmt)


state 15

    6 expr: note '-' .
    7     | note '-' . '-'
    8     | note '-' . '-' '-'

    '-'  shift, and go to state 18

    $default  reduce using rule 6 (expr)


state 16

    5 expr: note expr .

    $default  reduce using rule 5 (expr)


state 17

    9 expr: '[' expr ']' .

    $default  reduce using rule 9 (expr)


state 18

    7 expr: note '-' '-' .
    8     | note '-' '-' . '-'

    '-'  shift, and go to state 19

    $default  reduce using rule 7 (expr)


state 19

    8 expr: note '-' '-' '-' .

    $default  reduce using rule 8 (expr)
